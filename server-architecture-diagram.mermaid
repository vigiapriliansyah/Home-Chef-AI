graph TB
    %% ========================================
    %% EXTERNAL LAYER - USER ACCESS & CDN
    %% ========================================
    
    subgraph "­ЪїЇ External Access Layer"
        USERS["­ЪЉЦ End Users<br/>Рђб Web browsers<br/>Рђб Mobile devices<br/>Рђб Global access<br/>Рђб Multiple platforms"]
        CDN["­Ъџђ Content Delivery Network<br/>Рђб Cloudflare / AWS CloudFront<br/>Рђб Static asset caching<br/>Рђб Global edge locations<br/>Рђб Image optimization<br/>Рђб SSL termination"]
        DNS["­ЪћЇ DNS Management<br/>Рђб Domain routing<br/>Рђб Load balancing DNS<br/>Рђб Failover configuration<br/>Рђб Geographic routing"]
    end
    
    %% ========================================
    %% LOAD BALANCER & GATEWAY LAYER
    %% ========================================
    
    subgraph "Рџќ№ИЈ Load Balancer & Gateway Layer"
        LB_MAIN["­Ъћё Main Load Balancer<br/>Рђб Nginx / HAProxy<br/>Рђб SSL termination<br/>Рђб Rate limiting<br/>Рђб DDoS protection<br/>Рђб Health checks"]
        API_GATEWAY["­Ъџф API Gateway<br/>Рђб Kong / AWS API Gateway<br/>Рђб Request routing<br/>Рђб Authentication<br/>Рђб Rate limiting<br/>Рђб API versioning"]
        WAF["­ЪЏА№ИЈ Web Application Firewall<br/>Рђб AWS WAF / Cloudflare<br/>Рђб SQL injection protection<br/>Рђб XSS protection<br/>Рђб Bot protection<br/>Рђб Custom rules"]
    end
    
    %% ========================================
    %% WEB APPLICATION SERVERS
    %% ========================================
    
    subgraph "­Ъїљ Web Application Server Cluster"
        direction TB
        
        subgraph "­ЪЊ▒ Next.js Frontend Servers"
            WEB_SERVER_1["­ЪќЦ№ИЈ Web Server 1<br/>Рђб Next.js 15 SSR<br/>Рђб Node.js 18+<br/>Рђб 4 CPU cores<br/>Рђб 8GB RAM<br/>Рђб Port: 3000"]
            WEB_SERVER_2["­ЪќЦ№ИЈ Web Server 2<br/>Рђб Next.js 15 SSR<br/>Рђб Node.js 18+<br/>Рђб 4 CPU cores<br/>Рђб 8GB RAM<br/>Рђб Port: 3000"]
            WEB_SERVER_3["­ЪќЦ№ИЈ Web Server 3<br/>Рђб Next.js 15 SSR<br/>Рђб Node.js 18+<br/>Рђб 4 CPU cores<br/>Рђб 8GB RAM<br/>Рђб Port: 3000"]
        end
        
        WEB_LB["Рџќ№ИЈ Web Load Balancer<br/>Рђб Round-robin<br/>Рђб Health checks<br/>Рђб Session affinity<br/>Рђб Failover"]
        
        subgraph "­ЪњЙ Static Asset Storage"
            STATIC_STORAGE["­ЪЊЂ Static Files<br/>Рђб AWS S3 / MinIO<br/>Рђб Images, CSS, JS<br/>Рђб Versioned assets<br/>Рђб CDN integration"]
        end
    end
    
    %% ========================================
    %% AI API SERVER CLUSTER
    %% ========================================
    
    subgraph "­Ъцќ AI API Server Cluster"
        direction TB
        
        subgraph "­Ъџђ FastAPI Inference Servers"
            AI_SERVER_1["­ЪДа AI Server 1<br/>Рђб FastAPI + PyTorch<br/>Рђб Python 3.9+<br/>Рђб 8 CPU cores<br/>Рђб 16GB RAM<br/>Рђб GPU: NVIDIA T4<br/>Рђб Port: 8000"]
            AI_SERVER_2["­ЪДа AI Server 2<br/>Рђб FastAPI + PyTorch<br/>Рђб Python 3.9+<br/>Рђб 8 CPU cores<br/>Рђб 16GB RAM<br/>Рђб GPU: NVIDIA T4<br/>Рђб Port: 8000"]
        end
        
        AI_LB["Рџќ№ИЈ AI Load Balancer<br/>Рђб Weighted routing<br/>Рђб GPU utilization aware<br/>Рђб Circuit breaker<br/>Рђб Timeout handling"]
        
        subgraph "­Ъћё Model Management"
            MODEL_STORAGE["­ЪЊд Model Storage<br/>Рђб AWS EFS / NFS<br/>Рђб Shared model files<br/>Рђб Version control<br/>Рђб Hot-swapping"]
            MODEL_CACHE["­ЪњЙ Model Cache<br/>Рђб Redis Cluster<br/>Рђб Tokenizer cache<br/>Рђб Response cache<br/>Рђб Session cache"]
        end
    end
    
    %% ========================================
    %% DATABASE CLUSTER
    %% ========================================
    
    subgraph "­ЪњЙ Database Cluster"
        direction TB
        
        subgraph "­ЪЌё№ИЈ Primary Database Cluster"
            DB_PRIMARY["­Ъј» Primary Database<br/>Рђб PostgreSQL 15<br/>Рђб Master node<br/>Рђб Write operations<br/>Рђб 4 CPU cores<br/>Рђб 16GB RAM<br/>Рђб SSD storage"]
            DB_REPLICA_1["­ЪЊќ Read Replica 1<br/>Рђб PostgreSQL 15<br/>Рђб Read-only<br/>Рђб Auto-failover<br/>Рђб 4 CPU cores<br/>Рђб 8GB RAM"]
            DB_REPLICA_2["­ЪЊќ Read Replica 2<br/>Рђб PostgreSQL 15<br/>Рђб Read-only<br/>Рђб Load distribution<br/>Рђб 4 CPU cores<br/>Рђб 8GB RAM"]
        end
        
        DB_PROXY["­Ъћё Database Proxy<br/>Рђб PgBouncer / RDS Proxy<br/>Рђб Connection pooling<br/>Рђб Query routing<br/>Рђб Failover management"]
        
        subgraph "­ЪњЙ Cache Layer"
            REDIS_CLUSTER["­Ъћ┤ Redis Cluster<br/>Рђб Session storage<br/>Рђб Application cache<br/>Рђб Real-time data<br/>Рђб 3 nodes HA"]
            MEMCACHED["РџА Memcached<br/>Рђб Query result cache<br/>Рђб Object caching<br/>Рђб High-speed access"]
        end
        
        subgraph "­ЪЊі Backup & Recovery"
            DB_BACKUP["­ЪњЙ Database Backup<br/>Рђб Daily automated backups<br/>Рђб Point-in-time recovery<br/>Рђб Cross-region replication<br/>Рђб Encryption at rest"]
        end
    end
    
    %% ========================================
    %% TRAINING INFRASTRUCTURE
    %% ========================================
    
    subgraph "­ЪјЊ AI Training Infrastructure"
        direction TB
        
        subgraph "­ЪћЦ Training Servers"
            TRAIN_SERVER_1["­ЪЈІ№ИЈ Training Server 1<br/>Рђб High-performance GPU<br/>Рђб NVIDIA A100 / V100<br/>Рђб 32 CPU cores<br/>Рђб 128GB RAM<br/>Рђб NVMe SSD storage"]
            TRAIN_SERVER_2["­ЪЈІ№ИЈ Training Server 2<br/>Рђб High-performance GPU<br/>Рђб NVIDIA A100 / V100<br/>Рђб 32 CPU cores<br/>Рђб 128GB RAM<br/>Рђб NVMe SSD storage"]
        end
        
        subgraph "­ЪЊі Training Data Management"
            DATA_STORAGE["­ЪЊЂ Training Data Storage<br/>Рђб AWS S3 / HDFS<br/>Рђб Dataset versioning<br/>Рђб Data lineage<br/>Рђб Petabyte scale"]
            DATA_PROCESSING["­Ъћё Data Processing<br/>Рђб Apache Spark<br/>Рђб Data preprocessing<br/>Рђб ETL pipelines<br/>Рђб Distributed computing"]
        end
        
        subgraph "­Ъџђ Model Registry & Deployment"
            MODEL_REGISTRY["­ЪЊџ Model Registry<br/>Рђб MLflow / Kubeflow<br/>Рђб Model versioning<br/>Рђб Experiment tracking<br/>Рђб A/B testing"]
            CI_CD_PIPELINE["­Ъћё CI/CD Pipeline<br/>Рђб GitLab CI / GitHub Actions<br/>Рђб Automated testing<br/>Рђб Model validation<br/>Рђб Deployment automation"]
        end
    end
    
    %% ========================================
    %% MONITORING & SECURITY LAYER
    %% ========================================
    
    subgraph "­ЪЊі Monitoring & Observability"
        direction TB
        
        subgraph "­ЪЊѕ Application Monitoring"
            APM["­ЪЊі Application Performance<br/>Рђб New Relic / Datadog<br/>Рђб Response times<br/>Рђб Error tracking<br/>Рђб User experience"]
            LOGS["­ЪЊЮ Centralized Logging<br/>Рђб ELK Stack / Splunk<br/>Рђб Log aggregation<br/>Рђб Search & analysis<br/>Рђб Alerting"]
        end
        
        subgraph "­ЪќЦ№ИЈ Infrastructure Monitoring"
            METRICS["­ЪЊі Metrics Collection<br/>Рђб Prometheus + Grafana<br/>Рђб System metrics<br/>Рђб Custom metrics<br/>Рђб Real-time dashboards"]
            ALERTS["­Ъџе Alerting System<br/>Рђб PagerDuty / Slack<br/>Рђб Threshold alerts<br/>Рђб Anomaly detection<br/>Рђб Escalation policies"]
        end
        
        subgraph "­ЪЏА№ИЈ Security Monitoring"
            SIEM["­ЪћЇ Security Information<br/>Рђб Splunk / AWS Security Hub<br/>Рђб Threat detection<br/>Рђб Compliance monitoring<br/>Рђб Incident response"]
            VULNERABILITY["­Ъћњ Vulnerability Management<br/>Рђб Regular security scans<br/>Рђб Dependency monitoring<br/>Рђб Penetration testing<br/>Рђб Security patches"]
        end
    end
    
    %% ========================================
    %% DEVOPS & ORCHESTRATION
    %% ========================================
    
    subgraph "­Ъџб Container Orchestration & DevOps"
        direction TB
        
        subgraph "РўИ№ИЈ Kubernetes Cluster"
            K8S_MASTER["РџЎ№ИЈ Kubernetes Master<br/>Рђб Control plane<br/>Рђб API server<br/>Рђб Scheduler<br/>Рђб etcd cluster"]
            K8S_WORKERS["­ЪћД Worker Nodes<br/>Рђб Container runtime<br/>Рђб Kubelet<br/>Рђб kube-proxy<br/>Рђб Auto-scaling"]
        end
        
        subgraph "­ЪЊд Container Management"
            DOCKER_REGISTRY["­ЪЊд Container Registry<br/>Рђб Docker Hub / ECR<br/>Рђб Image versioning<br/>Рђб Security scanning<br/>Рђб Automated builds"]
            HELM["­ЪЊі Helm Charts<br/>Рђб Package management<br/>Рђб Configuration templates<br/>Рђб Release management<br/>Рђб Rollback capability"]
        end
        
        subgraph "­Ъћё GitOps & Automation"
            GITOPS["­Ъћё GitOps Workflow<br/>Рђб ArgoCD / Flux<br/>Рђб Declarative config<br/>Рђб Continuous deployment<br/>Рђб Configuration drift detection"]
            TERRAFORM["­ЪЈЌ№ИЈ Infrastructure as Code<br/>Рђб Terraform / CloudFormation<br/>Рђб Resource provisioning<br/>Рђб State management<br/>Рђб Multi-cloud support"]
        end
    end
    
    %% ========================================
    %% CONNECTIONS & DATA FLOWS
    %% ========================================
    
    %% External to Load Balancer
    USERS --> CDN
    USERS --> DNS
    CDN --> LB_MAIN
    DNS --> LB_MAIN
    
    %% Load Balancer to Services
    LB_MAIN --> WAF
    WAF --> API_GATEWAY
    API_GATEWAY --> WEB_LB
    API_GATEWAY --> AI_LB
    
    %% Web Application Flow
    WEB_LB --> WEB_SERVER_1
    WEB_LB --> WEB_SERVER_2
    WEB_LB --> WEB_SERVER_3
    WEB_SERVER_1 --> STATIC_STORAGE
    WEB_SERVER_2 --> STATIC_STORAGE
    WEB_SERVER_3 --> STATIC_STORAGE
    
    %% AI API Flow
    AI_LB --> AI_SERVER_1
    AI_LB --> AI_SERVER_2
    AI_SERVER_1 --> MODEL_STORAGE
    AI_SERVER_2 --> MODEL_STORAGE
    AI_SERVER_1 --> MODEL_CACHE
    AI_SERVER_2 --> MODEL_CACHE
    
    %% Database Connections
    WEB_SERVER_1 --> DB_PROXY
    WEB_SERVER_2 --> DB_PROXY
    WEB_SERVER_3 --> DB_PROXY
    DB_PROXY --> DB_PRIMARY
    DB_PROXY --> DB_REPLICA_1
    DB_PROXY --> DB_REPLICA_2
    WEB_SERVER_1 --> REDIS_CLUSTER
    WEB_SERVER_2 --> REDIS_CLUSTER
    WEB_SERVER_3 --> REDIS_CLUSTER
    
    %% Training to Production
    MODEL_REGISTRY -.->|"Model Deployment"| MODEL_STORAGE
    CI_CD_PIPELINE -.->|"Automated Deployment"| K8S_WORKERS
    DATA_STORAGE --> DATA_PROCESSING
    DATA_PROCESSING --> TRAIN_SERVER_1
    DATA_PROCESSING --> TRAIN_SERVER_2
    TRAIN_SERVER_1 --> MODEL_REGISTRY
    TRAIN_SERVER_2 --> MODEL_REGISTRY
    
    %% Monitoring Connections
    WEB_SERVER_1 -.-> APM
    WEB_SERVER_2 -.-> APM
    WEB_SERVER_3 -.-> APM
    AI_SERVER_1 -.-> APM
    AI_SERVER_2 -.-> APM
    DB_PRIMARY -.-> METRICS
    DB_REPLICA_1 -.-> METRICS
    DB_REPLICA_2 -.-> METRICS
    
    %% Container Orchestration
    K8S_MASTER --> K8S_WORKERS
    DOCKER_REGISTRY --> K8S_WORKERS
    HELM --> K8S_WORKERS
    GITOPS --> K8S_MASTER
    TERRAFORM -.-> K8S_MASTER
    
    %% Backup Connections
    DB_PRIMARY --> DB_BACKUP
    DB_REPLICA_1 --> DB_BACKUP
    
    %% Styling
    classDef external fill:#e8f4fd,stroke:#1e88e5,stroke-width:3px,color:#000
    classDef loadBalancer fill:#fff3e0,stroke:#ff9800,stroke-width:3px,color:#000
    classDef webServer fill:#e3f2fd,stroke:#2196f3,stroke-width:2px,color:#000
    classDef aiServer fill:#e8f5e8,stroke:#4caf50,stroke-width:2px,color:#000
    classDef database fill:#f3e5f5,stroke:#9c27b0,stroke-width:2px,color:#000
    classDef training fill:#fff8e1,stroke:#ffc107,stroke-width:2px,color:#000
    classDef monitoring fill:#fce4ec,stroke:#e91e63,stroke-width:2px,color:#000
    classDef devops fill:#e0f2f1,stroke:#00897b,stroke-width:2px,color:#000
    classDef security fill:#ffebee,stroke:#f44336,stroke-width:2px,color:#000
    
    %% Apply styles
    class USERS,CDN,DNS external
    class LB_MAIN,API_GATEWAY,WAF,WEB_LB,AI_LB loadBalancer
    class WEB_SERVER_1,WEB_SERVER_2,WEB_SERVER_3,STATIC_STORAGE webServer
    class AI_SERVER_1,AI_SERVER_2,MODEL_STORAGE,MODEL_CACHE aiServer
    class DB_PRIMARY,DB_REPLICA_1,DB_REPLICA_2,DB_PROXY,REDIS_CLUSTER,MEMCACHED,DB_BACKUP database
    class TRAIN_SERVER_1,TRAIN_SERVER_2,DATA_STORAGE,DATA_PROCESSING,MODEL_REGISTRY,CI_CD_PIPELINE training
    class APM,LOGS,METRICS,ALERTS monitoring
    class SIEM,VULNERABILITY security
    class K8S_MASTER,K8S_WORKERS,DOCKER_REGISTRY,HELM,GITOPS,TERRAFORM devops